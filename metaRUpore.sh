#!/bin/bash
## metaRUpore is designed to generate the reference and target sequence set for subsequent adaptive sequencing with readfish
##Author: Yu XIA 2021-09-03
##Email: shuixia100@gmail.com
##version 1.0
set -e

#### usage info ####
show_help() {
cat << EOF
version 2.1
arguments:
	-h	display this help 

	-f 	1D.fasta generated by initial sequncing

	-t	number of threads used for parallel computiong, default t=1


output files:
	reference.fa	a fasta file containing reads that used as reference for the adaptive sequencing run
	target.txt	a list of reads name that wll be used as target for adaptive sequencing (reads hit to target will be reject during adaptive sequencing)
	metaRU.toml	toml file used for readfish adaptive sequencing run

Example usage: 
	bash ../metaRUpore.sh -f test.fa -t 20


Example usage: 
	bash ../metaRUpore.sh -f test.fa -t 20
EOF
}

####################
# define arguments
####################
OPTIND=1  # Reset in case getopts has been used previously in the shell.

# initial value of variables
N_threads="1"
Input_fa=""
Lencutoff="0.9"
Simcutoff="70"
KEEP="keep.csv"
nowt=`date +%Y-%m-%d.%H:%M:%S`;
SCRIPT=`realpath $0`
DIR=`dirname $SCRIPT`

while getopts "t:f:l:s:o:h" opt; do
	case "$opt" in
		h)
			show_help
			exit 0
			;;
		t)
			N_threads=$OPTARG
			;;
		f)
			Input_fa=$OPTARG
			;;
		k)
			KEEP=$OPTARG
			;;
		s)
			Simcutoff=`echo "$OPTARG*100"|bc`
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 0
			;;
		'?')
			show_help >&2
			exit 1
			;;
		-?*)
			print 'Warning: Unknown option (ignored) : %s\n' "$1" >&2
			exit 0
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
		*) # default case: if no more options then break out of the loop
			break
			
	esac
done

if [ -z "$Input_fa" ]
then
	echo "No input fasta, -f must be specified"
	exit
fi

shift "$((OPTIND-1))"
# echo $Input_fa $Simcutoff $Lencutoff $N_threads $Output $DIR $nowt

# subset the name of the $Input_fa
# $Input_fa : including input.fa path while $Input_fa2 only contain name
myarray=(`echo $Input_fa| tr "/" " "`) 
Input_fa2=${myarray[-1]}

echo "remove nanopore reads with duplicated name"
$DIR/bin/seqkit rmdup -n $Input_fa2 -o ${Input_fa2}.uniq

Input_fa2=${Input_fa2}.uniq
$DIR/bin/fastaNameLengh.pl ${Input_fa2} | grep -v "#" > ${Input_fa2}.l

echo "----------------------------------------------------------------------
Start metaRUpore @ `date +"%Y-%m-%d %T"`
"

echo "metaRUpore is runing using parameters:
Input fasta: $Input_fa2
taxa to manually accept are stored in : keep.tab
Number of threads: $N_threads
---------------------------------------------------------------------
"

###############################################################
####### taxonomy annotation of combined.fa by centrifuge and MetaPhlan 2 markergene
###############################################################
echo "
----------------------------------------------------------------------------
Start taxonomy annotatin @ `date +"%Y-%m-%d %T"`"

Query="${Input_fa2}"
bash $DIR/bin/centrifuge_marker.sh $Query $N_threads $DIR $Simcutoff $Lencutoff $nowt

echo "
Finish taxonomy annotation @ `date +"%Y-%m-%d %T"`"

### generate the target to reject during adaptive sequencing ###############

echo "
----------------------------------------------------------------------------
Start generate target @ `date +"%Y-%m-%d %T"`"

Query="${Input_fa2}"
KEEP="keep.csv"

Rscript ${DIR}/bin/generate.target.R \
	${Query}_taxa.tab \
	$KEEP \
	${Query}_Centrifuge/classified_id	
	
echo "
Finish generate target @ `date +"%Y-%m-%d %T"`"

### generate reference.fa and modify toml #####################
cp ${Query} reference.fa 
sed "s|test.fa|$DIR\/reference.fa|" $DIR/database/metaRU.toml  > metaRU.toml
sed -i "s|target.txt|$DIR\/target.txt|" metaRU.toml

### move other files into intermediate.files ################

echo "
-----------------------------------------------------------------------------
Saving metaRUpore intermediate files
"
out=`echo "metaRUpore_intermediate.files"`
echo "moving results to $out"
if [ ! -d $out ]; then
        mkdir $out;
else
		echo "Warning: $out already exists. previous results are overwrited"
        rm -rf $out
        mkdir -p $out
fi

mv ${Input_fa2} ${out}
mv ${Input_fa2}_marker ${out}
mv ${Input_fa2}_Centrifuge ${out}
mv ${Input_fa2}_taxa.tab ${out}
mv ${Input_fa2}_taxa.tab_unclassified.ratio.tab ${out}


echo "
--------------------------------------------------------------------------------
Done metaRUpore @ `date +"%Y-%m-%d %T"`
"